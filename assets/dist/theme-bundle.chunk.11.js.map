{"version":3,"sources":["webpack:///./assets/js/theme/search.js","webpack:///./assets/js/theme/global/compare-products.js","webpack:///./assets/js/theme/catalog.js","webpack:///./assets/js/theme/common/faceted-search.js"],"names":["Search","formatCategoryTreeForJSTree","node","nodeData","text","data","id","metadata","state","selected","opened","children","forEach","childNode","push","showProducts","navigate","this","$productListingContainer","removeClass","$facetedSearchContainer","$contentResultsContainer","addClass","$","activateTab","searchData","url","count","urlUtils","replaceParams","page","goToUrl","showContent","$tabToActivate","find","each","idx","tab","$tab","is","removeAttr","attr","onTabChangeWithArrows","event","eventKey","which","$tabsCollection","index","document","activeElement","nextTabIdx","$activeTab","activeTabIdx","lastTabIdx","length","get","focus","trigger","onReady","compareProducts","context","urls","arrangeFocusOnSortBy","$searchForm","$categoryTreeContainer","Url","parse","window","location","href","treeData","initFacetedSearch","onSortBySubmit","bind","hooks","on","collapsibleFactory","preventDefault","query","section","validator","initValidation","bindValidation","categoryTree","categoryTreeData","createCategoryTree","selectedCategoryIds","jstree","get_selected","check","remove","categoryId","input","type","name","value","append","setTimeout","loadTreeNodes","cb","ajax","selectedCategoryId","prefix","headers","BCData","csrf_token","done","formattedResults","dataNode","$container","treeOptions","core","themes","icons","checkbox","three_state","plugins","onMinPriceError","onMaxPriceError","minPriceNotEntered","maxPriceNotEntered","onInvalidPrice","$contentListingContainer","$searchHeading","$searchCount","$contentCount","requestOptions","template","productListing","contentListing","sidebar","heading","productCount","contentCount","config","product_results","limit","searchProductsPerPage","showMore","facetedSearch","FacetedSearch","content","html","triggerHandler","animate","scrollTop","validationErrorMessages","$form","nod","submit","tap","announceInputErrorMessage","$element","add","selector","validate","errorMessage","performCheck","areAll","CatalogPage","updateCounterNav","counter","$link","urlContext","compare","join","compareCounter","$compareLink","$checked","map","element","item","product","currentTarget","$clickedCompareLink","checked","indexOf","splice","decrementCounter","showAlertModal","addEventListener","localStorage","setItem","$sortBySelector","getItem","removeItem","queryParams","serialize","split","format","pathname","search","buildQueryString","PageManager","SHOW_MORE_OPTIONS","modalTypes","ModalEvents","defaultOptions","accordionToggleSelector","blockerSelector","clearFacetSelector","componentSelector","facetNavListSelector","priceRangeErrorSelector","priceRangeFieldsetSelector","priceRangeFormSelector","priceRangeMaxPriceSelector","priceRangeMinPriceSelector","showMoreToggleSelector","facetedSearchFilterItems","modal","modalFactory","modalOpen","callback","options","collapsedFacets","collapsedFacetItems","$modal","target","setupFocusableElements","initPriceValidator","navList","collapseFacetItems","accordionToggle","collapsible","isCollapsed","targetId","collapseAllFacets","onStateChange","onToggleClick","onAccordionToggle","onClearFacet","onFacetClick","onRangeSubmit","filterFacetItems","bindEvents","refreshView","restoreCollapsedFacets","restoreCollapsedFacetItems","updateView","show","api","getPage","getUrl","err","hide","Error","expandFacetItems","$navList","hasMoreResults","toggleFacetItems","getMoreFacetResults","facet","facetUrl","params","list_all","response","open","updateContent","$items","val","toLowerCase","expandFacet","$accordionToggle","collapseFacet","close","expandAllFacets","selectors","errorSelector","fieldsetSelector","formSelector","maxPriceSelector","minPriceSelector","Validators","setMinMaxPriceValidation","priceRangeValidator","unbindEvents","onPopState","off","stopPropagation","$toggle","toggleClass","urlQueryParams","Object","assign","constants","VALID","decodeURI","key","parseQueryParams","hasOwnProperty","currentUrl","URLSearchParams","has","updatedLinkUrl","replace","history","replaceState","title"],"mappings":"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","file":"theme-bundle.chunk.11.js","sourcesContent":["import { hooks } from '@bigcommerce/stencil-utils';\nimport CatalogPage from './catalog';\nimport FacetedSearch from './common/faceted-search';\nimport { announceInputErrorMessage } from './common/utils/form-utils';\nimport compareProducts from './global/compare-products';\nimport urlUtils from './common/utils/url-utils';\nimport Url from 'url';\nimport collapsibleFactory from './common/collapsible';\nimport 'jstree';\nimport nod from './common/nod';\n\nconst leftArrowKey = 37;\nconst rightArrowKey = 39;\n\nexport default class Search extends CatalogPage {\n    formatCategoryTreeForJSTree(node) {\n        const nodeData = {\n            text: node.data,\n            id: node.metadata.id,\n            state: {\n                selected: node.selected,\n            },\n        };\n\n        if (node.state) {\n            nodeData.state.opened = node.state === 'open';\n            nodeData.children = true;\n        }\n\n        if (node.children) {\n            nodeData.children = [];\n            node.children.forEach((childNode) => {\n                nodeData.children.push(this.formatCategoryTreeForJSTree(childNode));\n            });\n        }\n\n        return nodeData;\n    }\n\n    showProducts(navigate = true) {\n        this.$productListingContainer.removeClass('u-hidden');\n        this.$facetedSearchContainer.removeClass('u-hidden');\n        this.$contentResultsContainer.addClass('u-hidden');\n\n        $('[data-content-results-toggle]').removeClass('navBar-action-color--active');\n        $('[data-content-results-toggle]').addClass('navBar-action');\n\n        $('[data-product-results-toggle]').removeClass('navBar-action');\n        $('[data-product-results-toggle]').addClass('navBar-action-color--active');\n\n        this.activateTab($('[data-product-results-toggle]'));\n\n        if (!navigate) {\n            return;\n        }\n\n        const searchData = $('#search-results-product-count span').data();\n        const url = (searchData.count > 0) ? searchData.url : urlUtils.replaceParams(searchData.url, {\n            page: 1,\n        });\n\n        urlUtils.goToUrl(url);\n    }\n\n    showContent(navigate = true) {\n        this.$contentResultsContainer.removeClass('u-hidden');\n        this.$productListingContainer.addClass('u-hidden');\n        this.$facetedSearchContainer.addClass('u-hidden');\n\n        $('[data-product-results-toggle]').removeClass('navBar-action-color--active');\n        $('[data-product-results-toggle]').addClass('navBar-action');\n\n        $('[data-content-results-toggle]').removeClass('navBar-action');\n        $('[data-content-results-toggle]').addClass('navBar-action-color--active');\n\n        this.activateTab($('[data-content-results-toggle]'));\n\n        if (!navigate) {\n            return;\n        }\n\n        const searchData = $('#search-results-content-count span').data();\n        const url = (searchData.count > 0) ? searchData.url : urlUtils.replaceParams(searchData.url, {\n            page: 1,\n        });\n\n        urlUtils.goToUrl(url);\n    }\n\n    activateTab($tabToActivate) {\n        const $tabsCollection = $('[data-search-page-tabs]').find('[role=\"tab\"]');\n\n        $tabsCollection.each((idx, tab) => {\n            const $tab = $(tab);\n\n            if ($tab.is($tabToActivate)) {\n                $tab.removeAttr('tabindex');\n                $tab.attr('aria-selected', true);\n                return;\n            }\n\n            $tab.attr('tabindex', '-1');\n            $tab.attr('aria-selected', false);\n        });\n    }\n\n    onTabChangeWithArrows(event) {\n        const eventKey = event.which;\n        const isLeftOrRightArrowKeydown = eventKey === leftArrowKey\n            || eventKey === rightArrowKey;\n        if (!isLeftOrRightArrowKeydown) return;\n\n        const $tabsCollection = $('[data-search-page-tabs]').find('[role=\"tab\"]');\n\n        const isActiveElementNotTab = $tabsCollection.index($(document.activeElement)) === -1;\n        if (isActiveElementNotTab) return;\n\n        const $activeTab = $(`#${document.activeElement.id}`);\n        const activeTabIdx = $tabsCollection.index($activeTab);\n        const lastTabIdx = $tabsCollection.length - 1;\n\n        let nextTabIdx;\n        switch (eventKey) {\n        case leftArrowKey:\n            nextTabIdx = activeTabIdx === 0 ? lastTabIdx : activeTabIdx - 1;\n            break;\n        case rightArrowKey:\n            nextTabIdx = activeTabIdx === lastTabIdx ? 0 : activeTabIdx + 1;\n            break;\n        default: break;\n        }\n\n        $($tabsCollection.get(nextTabIdx)).focus().trigger('click');\n    }\n\n    onReady() {\n        compareProducts(this.context.urls);\n        this.arrangeFocusOnSortBy();\n\n        const $searchForm = $('[data-advanced-search-form]');\n        const $categoryTreeContainer = $searchForm.find('[data-search-category-tree]');\n        const url = Url.parse(window.location.href, true);\n        const treeData = [];\n        this.$productListingContainer = $('#product-listing-container');\n        this.$facetedSearchContainer = $('#faceted-search-container');\n        this.$contentResultsContainer = $('#search-results-content');\n\n        // Init faceted search\n        if ($('#facetedSearch').length > 0) {\n            this.initFacetedSearch();\n        } else {\n            this.onSortBySubmit = this.onSortBySubmit.bind(this);\n            hooks.on('sortBy-submitted', this.onSortBySubmit);\n        }\n\n        // Init collapsibles\n        collapsibleFactory();\n\n        $('[data-product-results-toggle]').on('click', event => {\n            event.preventDefault();\n            this.showProducts();\n        });\n\n        $('[data-content-results-toggle]').on('click', event => {\n            event.preventDefault();\n            this.showContent();\n        });\n\n        $('[data-search-page-tabs]').on('keyup', this.onTabChangeWithArrows);\n\n        if (this.$productListingContainer.find('li.product').length === 0 || url.query.section === 'content') {\n            this.showContent(false);\n        } else {\n            this.showProducts(false);\n        }\n\n        const validator = this.initValidation($searchForm)\n            .bindValidation($searchForm.find('#search_query_adv'));\n\n        this.context.categoryTree.forEach((node) => {\n            treeData.push(this.formatCategoryTreeForJSTree(node));\n        });\n\n        this.categoryTreeData = treeData;\n        this.createCategoryTree($categoryTreeContainer);\n\n        $searchForm.on('submit', event => {\n            const selectedCategoryIds = $categoryTreeContainer.jstree().get_selected();\n\n            if (!validator.check()) {\n                return event.preventDefault();\n            }\n\n            $searchForm.find('input[name=\"category\\[\\]\"]').remove();\n\n            for (const categoryId of selectedCategoryIds) {\n                const input = $('<input>', {\n                    type: 'hidden',\n                    name: 'category[]',\n                    value: categoryId,\n                });\n\n                $searchForm.append(input);\n            }\n        });\n\n        setTimeout(() => {\n            $('[data-search-aria-message]').removeClass('u-hidden');\n        }, 100);\n    }\n\n    loadTreeNodes(node, cb) {\n        $.ajax({\n            url: '/remote/v1/category-tree',\n            data: {\n                selectedCategoryId: node.id,\n                prefix: 'category',\n            },\n            headers: {\n                'x-xsrf-token': window.BCData && window.BCData.csrf_token ? window.BCData.csrf_token : '',\n            },\n        }).done(data => {\n            const formattedResults = [];\n\n            data.forEach((dataNode) => {\n                formattedResults.push(this.formatCategoryTreeForJSTree(dataNode));\n            });\n\n            cb(formattedResults);\n        });\n    }\n\n    createCategoryTree($container) {\n        const treeOptions = {\n            core: {\n                data: (node, cb) => {\n                    // Root node\n                    if (node.id === '#') {\n                        cb(this.categoryTreeData);\n                    } else {\n                        // Lazy loaded children\n                        this.loadTreeNodes(node, cb);\n                    }\n                },\n                themes: {\n                    icons: true,\n                },\n            },\n            checkbox: {\n                three_state: false,\n            },\n            plugins: [\n                'checkbox',\n            ],\n        };\n\n        $container.jstree(treeOptions);\n    }\n\n    initFacetedSearch() {\n        // eslint-disable-next-line object-curly-newline\n        const { onMinPriceError, onMaxPriceError, minPriceNotEntered, maxPriceNotEntered, onInvalidPrice } = this.context;\n        const $productListingContainer = $('#product-listing-container');\n        const $contentListingContainer = $('#search-results-content');\n        const $facetedSearchContainer = $('#faceted-search-container');\n        const $searchHeading = $('#search-results-heading');\n        const $searchCount = $('#search-results-product-count');\n        const $contentCount = $('#search-results-content-count');\n        const productsPerPage = this.context.searchProductsPerPage;\n        const requestOptions = {\n            template: {\n                productListing: 'search/product-listing',\n                contentListing: 'search/content-listing',\n                sidebar: 'search/sidebar',\n                heading: 'search/heading',\n                productCount: 'search/product-count',\n                contentCount: 'search/content-count',\n            },\n            config: {\n                product_results: {\n                    limit: productsPerPage,\n                },\n            },\n            showMore: 'search/show-more',\n        };\n\n        this.facetedSearch = new FacetedSearch(requestOptions, (content) => {\n            $searchHeading.html(content.heading);\n\n            const url = Url.parse(window.location.href, true);\n            if (url.query.section === 'content') {\n                $contentListingContainer.html(content.contentListing);\n                $contentCount.html(content.contentCount);\n                this.showContent(false);\n            } else {\n                $productListingContainer.html(content.productListing);\n                $facetedSearchContainer.html(content.sidebar);\n                $searchCount.html(content.productCount);\n                this.showProducts(false);\n            }\n\n            $('body').triggerHandler('compareReset');\n\n            $('html, body').animate({\n                scrollTop: 0,\n            }, 100);\n        }, {\n            validationErrorMessages: {\n                onMinPriceError,\n                onMaxPriceError,\n                minPriceNotEntered,\n                maxPriceNotEntered,\n                onInvalidPrice,\n            },\n        });\n    }\n\n    initValidation($form) {\n        this.$form = $form;\n        this.validator = nod({\n            submit: $form,\n            tap: announceInputErrorMessage,\n        });\n\n        return this;\n    }\n\n    bindValidation($element) {\n        if (this.validator) {\n            this.validator.add({\n                selector: $element,\n                validate: 'presence',\n                errorMessage: $element.data('errorMessage'),\n            });\n        }\n\n        return this;\n    }\n\n    check() {\n        if (this.validator) {\n            this.validator.performCheck();\n            return this.validator.areAll('valid');\n        }\n\n        return false;\n    }\n}\n","import { showAlertModal } from './modal';\n\nfunction decrementCounter(counter, item) {\n    const index = counter.indexOf(item);\n\n    if (index > -1) {\n        counter.splice(index, 1);\n    }\n}\n\nfunction incrementCounter(counter, item) {\n    counter.push(item);\n}\n\nfunction updateCounterNav(counter, $link, urlContext) {\n    if (counter.length !== 0) {\n        if (!$link.is('visible')) {\n            $link.addClass('show');\n        }\n        $link.attr('href', `${urlContext.compare}/${counter.join('/')}`);\n        $link.find('span.countPill').html(counter.length);\n    } else {\n        $link.removeClass('show');\n    }\n}\n\nexport default function (urlContext) {\n    let compareCounter = [];\n\n    const $compareLink = $('a[data-compare-nav]');\n\n    $('body').on('compareReset', () => {\n        const $checked = $('body').find('input[name=\"products\\[\\]\"]:checked');\n\n        compareCounter = $checked.length ? $checked.map((index, element) => element.value).get() : [];\n        updateCounterNav(compareCounter, $compareLink, urlContext);\n    });\n\n    $('body').triggerHandler('compareReset');\n\n    $('body').on('click', '[data-compare-id]', event => {\n        const product = event.currentTarget.value;\n        const $clickedCompareLink = $('a[data-compare-nav]');\n\n        if (event.currentTarget.checked) {\n            incrementCounter(compareCounter, product);\n        } else {\n            decrementCounter(compareCounter, product);\n        }\n\n        updateCounterNav(compareCounter, $clickedCompareLink, urlContext);\n    });\n\n    $('body').on('submit', '[data-product-compare]', event => {\n        const $this = $(event.currentTarget);\n        const productsToCompare = $this.find('input[name=\"products\\[\\]\"]:checked');\n\n        if (productsToCompare.length <= 1) {\n            showAlertModal('You must select at least two products to compare');\n            event.preventDefault();\n        }\n    });\n\n    $('body').on('click', 'a[data-compare-nav]', () => {\n        const $clickedCheckedInput = $('body').find('input[name=\"products\\[\\]\"]:checked');\n\n        if ($clickedCheckedInput.length <= 1) {\n            showAlertModal('You must select at least two products to compare');\n            return false;\n        }\n    });\n}\n","import PageManager from './page-manager';\nimport urlUtils from './common/utils/url-utils';\nimport Url from 'url';\n\nexport default class CatalogPage extends PageManager {\n    constructor(context) {\n        super(context);\n\n        window.addEventListener('beforeunload', () => {\n            if (document.activeElement.id === 'sort') {\n                window.localStorage.setItem('sortByStatus', 'selected');\n            }\n        });\n    }\n\n    arrangeFocusOnSortBy() {\n        const $sortBySelector = $('[data-sort-by=\"product\"] #sort');\n\n        if (window.localStorage.getItem('sortByStatus')) {\n            $sortBySelector.focus();\n            window.localStorage.removeItem('sortByStatus');\n        }\n    }\n\n    onSortBySubmit(event, currentTarget) {\n        const url = Url.parse(window.location.href, true);\n        const queryParams = $(currentTarget).serialize().split('=');\n\n        url.query[queryParams[0]] = queryParams[1];\n        delete url.query.page;\n\n        event.preventDefault();\n        window.location = Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(url.query) });\n    }\n}\n","import { hooks, api } from '@bigcommerce/stencil-utils';\nimport _ from 'lodash';\nimport Url from 'url';\nimport urlUtils from './utils/url-utils';\nimport modalFactory, { modalTypes, ModalEvents } from '../global/modal';\nimport collapsibleFactory from './collapsible';\nimport { Validators } from './utils/form-utils';\nimport nod from './nod';\n\nconst { SHOW_MORE_OPTIONS } = modalTypes;\nconst { opened } = ModalEvents;\n\nconst defaultOptions = {\n    accordionToggleSelector: '#facetedSearch .accordion-navigation, #facetedSearch .facetedSearch-toggle',\n    blockerSelector: '#facetedSearch .blocker',\n    clearFacetSelector: '#facetedSearch .facetedSearch-clearLink',\n    componentSelector: '#facetedSearch-navList',\n    facetNavListSelector: '#facetedSearch .navList',\n    priceRangeErrorSelector: '#facet-range-form .form-inlineMessage',\n    priceRangeFieldsetSelector: '#facet-range-form .form-fieldset',\n    priceRangeFormSelector: '#facet-range-form',\n    priceRangeMaxPriceSelector: '#facet-range-form [name=max_price]',\n    priceRangeMinPriceSelector: '#facet-range-form [name=min_price]',\n    showMoreToggleSelector: '#facetedSearch .accordion-content .toggleLink',\n    facetedSearchFilterItems: '#facetedSearch-filterItems .form-input',\n    modal: modalFactory('#modal')[0],\n    modalOpen: false,\n};\n\n/**\n * Faceted search view component\n */\nclass FacetedSearch {\n    /**\n     * @param {object} requestOptions - Object with options for the ajax requests\n     * @param {function} callback - Function to execute after fetching templates\n     * @param {object} options - Configurable options\n     * @example\n     *\n     * let requestOptions = {\n     *      templates: {\n     *          productListing: 'category/product-listing',\n     *          sidebar: 'category/sidebar'\n     *     }\n     * };\n     *\n     * let templatesDidLoad = function(content) {\n     *     $productListingContainer.html(content.productListing);\n     *     $facetedSearchContainer.html(content.sidebar);\n     * };\n     *\n     * let facetedSearch = new FacetedSearch(requestOptions, templatesDidLoad);\n     */\n    constructor(requestOptions, callback, options) {\n        // Private properties\n        this.requestOptions = requestOptions;\n        this.callback = callback;\n        this.options = _.extend({}, defaultOptions, options);\n        this.collapsedFacets = [];\n        this.collapsedFacetItems = [];\n\n        if (this.options.modal) {\n            this.options.modal.$modal.on(opened, event => {\n                const $filterItems = $(event.target).find('#facetedSearch-filterItems');\n                if ($filterItems.length) {\n                    this.options.modal.setupFocusableElements(SHOW_MORE_OPTIONS);\n                }\n            });\n        }\n\n        // Init collapsibles\n        collapsibleFactory();\n\n        // Init price validator\n        this.initPriceValidator();\n\n        // Show limited items by default\n        $(this.options.facetNavListSelector).each((index, navList) => {\n            this.collapseFacetItems($(navList));\n        });\n\n        // Mark initially collapsed accordions\n        $(this.options.accordionToggleSelector).each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n            const collapsible = $accordionToggle.data('collapsibleInstance');\n\n            if (collapsible.isCollapsed) {\n                this.collapsedFacets.push(collapsible.targetId);\n            }\n        });\n\n        // Collapse all facets if initially hidden\n        // NOTE: Need to execute after Collapsible gets bootstrapped\n        setTimeout(() => {\n            if ($(this.options.componentSelector).is(':hidden')) {\n                this.collapseAllFacets();\n            }\n        });\n\n        // Observe user events\n        this.onStateChange = this.onStateChange.bind(this);\n        this.onToggleClick = this.onToggleClick.bind(this);\n        this.onAccordionToggle = this.onAccordionToggle.bind(this);\n        this.onClearFacet = this.onClearFacet.bind(this);\n        this.onFacetClick = this.onFacetClick.bind(this);\n        this.onRangeSubmit = this.onRangeSubmit.bind(this);\n        this.onSortBySubmit = this.onSortBySubmit.bind(this);\n        this.filterFacetItems = this.filterFacetItems.bind(this);\n\n        this.bindEvents();\n    }\n\n    // Public methods\n    refreshView(content) {\n        if (content) {\n            this.callback(content);\n        }\n\n        // Init collapsibles\n        collapsibleFactory();\n\n        // Init price validator\n        this.initPriceValidator();\n\n        // Restore view state\n        this.restoreCollapsedFacets();\n        this.restoreCollapsedFacetItems();\n\n        // Bind events\n        this.bindEvents();\n    }\n\n    updateView() {\n        $(this.options.blockerSelector).show();\n\n        api.getPage(urlUtils.getUrl(), this.requestOptions, (err, content) => {\n            $(this.options.blockerSelector).hide();\n\n            if (err) {\n                throw new Error(err);\n            }\n\n            // Refresh view with new content\n            this.refreshView(content);\n        });\n    }\n\n    expandFacetItems($navList) {\n        const id = $navList.attr('id');\n\n        // Remove\n        this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\n    }\n\n    collapseFacetItems($navList) {\n        const id = $navList.attr('id');\n        const hasMoreResults = $navList.data('hasMoreResults');\n\n        if (hasMoreResults) {\n            this.collapsedFacetItems = _.union(this.collapsedFacetItems, [id]);\n        } else {\n            this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\n        }\n    }\n\n    toggleFacetItems($navList) {\n        const id = $navList.attr('id');\n\n        // Toggle depending on `collapsed` flag\n        if (_.includes(this.collapsedFacetItems, id)) {\n            this.getMoreFacetResults($navList);\n\n            return true;\n        }\n\n        this.collapseFacetItems($navList);\n\n        return false;\n    }\n\n    getMoreFacetResults($navList) {\n        const facet = $navList.data('facet');\n        const facetUrl = urlUtils.getUrl();\n\n        if (this.requestOptions.showMore) {\n            api.getPage(facetUrl, {\n                template: this.requestOptions.showMore,\n                params: {\n                    list_all: facet,\n                },\n            }, (err, response) => {\n                if (err) {\n                    throw new Error(err);\n                }\n\n                this.options.modal.open();\n                this.options.modalOpen = true;\n                this.options.modal.updateContent(response);\n            });\n        }\n\n        this.collapseFacetItems($navList);\n\n        return false;\n    }\n\n    filterFacetItems(event) {\n        const $items = $('.navList-item');\n        const query = $(event.currentTarget).val().toLowerCase();\n\n        $items.each((index, element) => {\n            const text = $(element).text().toLowerCase();\n            if (text.indexOf(query) !== -1) {\n                $(element).show();\n            } else {\n                $(element).hide();\n            }\n        });\n    }\n\n    expandFacet($accordionToggle) {\n        const collapsible = $accordionToggle.data('collapsibleInstance');\n\n        collapsible.open();\n    }\n\n    collapseFacet($accordionToggle) {\n        const collapsible = $accordionToggle.data('collapsibleInstance');\n\n        collapsible.close();\n    }\n\n    collapseAllFacets() {\n        const $accordionToggles = $(this.options.accordionToggleSelector);\n\n        $accordionToggles.each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n\n            this.collapseFacet($accordionToggle);\n        });\n    }\n\n    expandAllFacets() {\n        const $accordionToggles = $(this.options.accordionToggleSelector);\n\n        $accordionToggles.each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n\n            this.expandFacet($accordionToggle);\n        });\n    }\n\n    // Private methods\n    initPriceValidator() {\n        if ($(this.options.priceRangeFormSelector).length === 0) {\n            return;\n        }\n\n        const validator = nod();\n        const selectors = {\n            errorSelector: this.options.priceRangeErrorSelector,\n            fieldsetSelector: this.options.priceRangeFieldsetSelector,\n            formSelector: this.options.priceRangeFormSelector,\n            maxPriceSelector: this.options.priceRangeMaxPriceSelector,\n            minPriceSelector: this.options.priceRangeMinPriceSelector,\n        };\n\n        Validators.setMinMaxPriceValidation(validator, selectors, this.options.validationErrorMessages);\n\n        this.priceRangeValidator = validator;\n    }\n\n    restoreCollapsedFacetItems() {\n        const $navLists = $(this.options.facetNavListSelector);\n\n        // Restore collapsed state for each facet\n        $navLists.each((index, navList) => {\n            const $navList = $(navList);\n            const id = $navList.attr('id');\n            const shouldCollapse = _.includes(this.collapsedFacetItems, id);\n\n            if (shouldCollapse) {\n                this.collapseFacetItems($navList);\n            } else {\n                this.expandFacetItems($navList);\n            }\n        });\n    }\n\n    restoreCollapsedFacets() {\n        const $accordionToggles = $(this.options.accordionToggleSelector);\n\n        $accordionToggles.each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n            const collapsible = $accordionToggle.data('collapsibleInstance');\n            const id = collapsible.targetId;\n            const shouldCollapse = _.includes(this.collapsedFacets, id);\n\n            if (shouldCollapse) {\n                this.collapseFacet($accordionToggle);\n            } else {\n                this.expandFacet($accordionToggle);\n            }\n        });\n    }\n\n    bindEvents() {\n        // Clean-up\n        this.unbindEvents();\n\n        // DOM events\n        $(window).on('statechange', this.onStateChange);\n        $(window).on('popstate', this.onPopState);\n        $(document).on('click', this.options.showMoreToggleSelector, this.onToggleClick);\n        $(document).on('toggle.collapsible', this.options.accordionToggleSelector, this.onAccordionToggle);\n        $(document).on('keyup', this.options.facetedSearchFilterItems, this.filterFacetItems);\n        $(this.options.clearFacetSelector).on('click', this.onClearFacet);\n\n        // Hooks\n        hooks.on('facetedSearch-facet-clicked', this.onFacetClick);\n        hooks.on('facetedSearch-range-submitted', this.onRangeSubmit);\n        hooks.on('sortBy-submitted', this.onSortBySubmit);\n    }\n\n    unbindEvents() {\n        // DOM events\n        $(window).off('statechange', this.onStateChange);\n        $(window).off('popstate', this.onPopState);\n        $(document).off('click', this.options.showMoreToggleSelector, this.onToggleClick);\n        $(document).off('toggle.collapsible', this.options.accordionToggleSelector, this.onAccordionToggle);\n        $(document).off('keyup', this.options.facetedSearchFilterItems, this.filterFacetItems);\n        $(this.options.clearFacetSelector).off('click', this.onClearFacet);\n\n        // Hooks\n        hooks.off('facetedSearch-facet-clicked', this.onFacetClick);\n        hooks.off('facetedSearch-range-submitted', this.onRangeSubmit);\n        hooks.off('sortBy-submitted', this.onSortBySubmit);\n    }\n\n    onClearFacet(event) {\n        const $link = $(event.currentTarget);\n        const url = $link.attr('href');\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        // Update URL\n        urlUtils.goToUrl(url);\n    }\n\n    onToggleClick(event) {\n        const $toggle = $(event.currentTarget);\n        const $navList = $($toggle.attr('href'));\n\n        // Prevent default\n        event.preventDefault();\n\n        // Toggle visible items\n        this.toggleFacetItems($navList);\n    }\n\n    onFacetClick(event, currentTarget) {\n        const $link = $(currentTarget);\n        const url = $link.attr('href');\n\n        event.preventDefault();\n\n        $link.toggleClass('is-selected');\n\n        // Update URL\n        urlUtils.goToUrl(url);\n\n        if (this.options.modalOpen) {\n            this.options.modal.close();\n        }\n    }\n\n    onSortBySubmit(event, currentTarget) {\n        const url = Url.parse(window.location.href, true);\n        const queryParams = $(currentTarget).serialize().split('=');\n\n        url.query[queryParams[0]] = queryParams[1];\n        delete url.query.page;\n\n        // Url object `query` is not a traditional JavaScript Object on all systems, clone it instead\n        const urlQueryParams = {};\n        Object.assign(urlQueryParams, url.query);\n\n        event.preventDefault();\n\n        urlUtils.goToUrl(Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(urlQueryParams) }));\n    }\n\n    onRangeSubmit(event, currentTarget) {\n        event.preventDefault();\n\n        if (!this.priceRangeValidator.areAll(nod.constants.VALID)) {\n            return;\n        }\n\n        const url = Url.parse(window.location.href, true);\n        let queryParams = decodeURI($(currentTarget).serialize()).split('&');\n        queryParams = urlUtils.parseQueryParams(queryParams);\n\n        for (const key in queryParams) {\n            if (queryParams.hasOwnProperty(key)) {\n                url.query[key] = queryParams[key];\n            }\n        }\n\n        // Url object `query` is not a traditional JavaScript Object on all systems, clone it instead\n        const urlQueryParams = {};\n        Object.assign(urlQueryParams, url.query);\n\n        urlUtils.goToUrl(Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(urlQueryParams) }));\n    }\n\n    onStateChange() {\n        this.updateView();\n    }\n\n    onAccordionToggle(event) {\n        const $accordionToggle = $(event.currentTarget);\n        const collapsible = $accordionToggle.data('collapsibleInstance');\n        const id = collapsible.targetId;\n\n        if (collapsible.isCollapsed) {\n            this.collapsedFacets = _.union(this.collapsedFacets, [id]);\n        } else {\n            this.collapsedFacets = _.without(this.collapsedFacets, id);\n        }\n    }\n\n    onPopState() {\n        const currentUrl = window.location.href;\n        const searchParams = new URLSearchParams(currentUrl);\n        // If searchParams does not contain a page value then modify url query string to have page=1\n        if (!searchParams.has('page')) {\n            const linkUrl = $('.pagination-link').attr('href');\n            const re = /page=[0-9]+/i;\n            const updatedLinkUrl = linkUrl.replace(re, 'page=1');\n            window.history.replaceState({}, document.title, updatedLinkUrl);\n        }\n        $(window).trigger('statechange');\n    }\n}\n\nexport default FacetedSearch;\n"],"sourceRoot":""}