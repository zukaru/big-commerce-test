{"version":3,"sources":["webpack:///./assets/js/theme/auth.js","webpack:///./assets/js/theme/common/utils/translations-utils.js","webpack:///./node_modules/lodash/_baseIteratee.js","webpack:///./node_modules/lodash/keys.js","webpack:///./node_modules/lodash/_baseCreate.js","webpack:///./assets/js/theme/common/state-country.js","webpack:///./node_modules/lodash/each.js","webpack:///./node_modules/lodash/transform.js","webpack:///./node_modules/lodash/_arrayEach.js","webpack:///./node_modules/lodash/_baseForOwn.js","webpack:///./node_modules/lodash/_baseFor.js","webpack:///./node_modules/lodash/_createBaseFor.js","webpack:///./assets/js/theme/common/form-validation.js"],"names":["Auth","context","validationDictionary","createTranslationDictionary","formCreateSelector","recaptcha","$","registerLoginValidation","$loginForm","loginModel","forms","this","loginValidator","nod","submit","tap","announceInputErrorMessage","add","selector","validate","cb","val","email","errorMessage","useValidEmail","password","enterPass","on","event","performCheck","areAll","preventDefault","registerForgotPasswordValidation","$forgotPasswordForm","forgotPasswordValidator","registerNewPasswordValidation","enterPassword","matchPassword","password_match","invalidPassword","invalid_password","newPasswordValidator","newPasswordForm","passwordSelector","password2Selector","errorTextMessages","createPasswordValidationErrorTextObject","Validators","setPasswordValidation","passwordRequirements","registerCreateAccountValidator","$createAccountForm","$last","validationModel","validation","createAccountValidator","$stateElement","emailSelector","$emailElement","$passwordElement","$password2Element","stateCountry","err","field","Error","$field","getStatus","remove","is","setStateCountryValidation","field_not_blank","cleanUpStateValidation","setEmailValidation","valid_email","onReady","attr","recaptchaTitle","classifyForm","$newPasswordForm","length","PageManager","isTranslationDictionaryNotEmpty","dictionary","Object","keys","activeDictionary","i","JSON","parse","chooseActiveDictionary","validationDictionaryJSON","validationFallbackDictionaryJSON","validationDefaultDictionaryJSON","localizations","values","map","key","split","pop","reduce","acc","module","exports","value","nativeKeys","overArg","isObject","objectCreate","create","baseCreate","object","proto","prototype","result","undefined","stateElement","options","callback","countryName","currentTarget","utils","api","country","getByName","response","showAlertModal","state_error","$currentInput","data","states","newElement","attrs","prop","item","ret","name","replacementAttributes","type","id","class","replaceWith","$newElement","insertStateHiddenField","prev","find","hide","makeStateOptional","$selectElement","$hiddenInput","append","required","show","makeStateRequired","statesArray","container","push","prefix","stateObj","useIdForStates","html","join","addOptions","array","iteratee","index","arrayEach","baseForOwn","baseIteratee","getPrototype","isArray","isBuffer","isFunction","isTypedArray","accumulator","isArr","isArrLike","Ctor","constructor","baseFor","createBaseFor","fromRight","keysFunc","iterable","props","buildValidation","$validateableElement","errorText","formFieldId","secondarySelector","fieldValidations","formFieldSelector","dateValidation","$formField","min_date","max_date","invalidMessage","formElementId","minSplit","maxSplit","minDate","Date","maxDate","triggeredBy","day","Number","month","year","chosenDate","buildDateValidation","each","element","$inputElement","tagName","get","inputName","elementSelector","label","min","max","numberVal","buildNumberRangeValidation","buildRequiredValidation","checkbox","checked","$form","validationsToPerform","requiredFieldValidationText","input","requiredValidationMessage","first","concat"],"mappings":"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","file":"theme-bundle.chunk.10.js","sourcesContent":["import PageManager from './page-manager';\nimport stateCountry from './common/state-country';\nimport nod from './common/nod';\nimport validation from './common/form-validation';\nimport forms from './common/models/forms';\nimport {\n    classifyForm,\n    Validators,\n    createPasswordValidationErrorTextObject,\n    announceInputErrorMessage,\n} from './common/utils/form-utils';\nimport { createTranslationDictionary } from './common/utils/translations-utils';\n\nexport default class Auth extends PageManager {\n    constructor(context) {\n        super(context);\n        this.validationDictionary = createTranslationDictionary(context);\n        this.formCreateSelector = 'form[data-create-account-form]';\n        this.recaptcha = $('.g-recaptcha iframe[src]');\n    }\n\n    registerLoginValidation($loginForm) {\n        const loginModel = forms;\n\n        this.loginValidator = nod({\n            submit: '.login-form input[type=\"submit\"]',\n            tap: announceInputErrorMessage,\n        });\n\n        this.loginValidator.add([\n            {\n                selector: '.login-form input[name=\"login_email\"]',\n                validate: (cb, val) => {\n                    const result = loginModel.email(val);\n\n                    cb(result);\n                },\n                errorMessage: this.context.useValidEmail,\n            },\n            {\n                selector: '.login-form input[name=\"login_pass\"]',\n                validate: (cb, val) => {\n                    const result = loginModel.password(val);\n\n                    cb(result);\n                },\n                errorMessage: this.context.enterPass,\n            },\n        ]);\n\n        $loginForm.on('submit', event => {\n            this.loginValidator.performCheck();\n\n            if (this.loginValidator.areAll('valid')) {\n                return;\n            }\n\n            event.preventDefault();\n        });\n    }\n\n    registerForgotPasswordValidation($forgotPasswordForm) {\n        this.forgotPasswordValidator = nod({\n            submit: '.forgot-password-form input[type=\"submit\"]',\n            tap: announceInputErrorMessage,\n        });\n\n        this.forgotPasswordValidator.add([\n            {\n                selector: '.forgot-password-form input[name=\"email\"]',\n                validate: (cb, val) => {\n                    const result = forms.email(val);\n\n                    cb(result);\n                },\n                errorMessage: this.context.useValidEmail,\n            },\n        ]);\n\n        $forgotPasswordForm.on('submit', event => {\n            this.forgotPasswordValidator.performCheck();\n\n            if (this.forgotPasswordValidator.areAll('valid')) {\n                return;\n            }\n\n            event.preventDefault();\n        });\n    }\n\n    registerNewPasswordValidation() {\n        const { password: enterPassword, password_match: matchPassword, invalid_password: invalidPassword } = this.validationDictionary;\n        const newPasswordForm = '.new-password-form';\n        const newPasswordValidator = nod({\n            submit: $(`${newPasswordForm} input[type=\"submit\"]`),\n            tap: announceInputErrorMessage,\n        });\n        const passwordSelector = $(`${newPasswordForm} input[name=\"password\"]`);\n        const password2Selector = $(`${newPasswordForm} input[name=\"password_confirm\"]`);\n        const errorTextMessages = createPasswordValidationErrorTextObject(enterPassword, enterPassword, matchPassword, invalidPassword);\n        Validators.setPasswordValidation(\n            newPasswordValidator,\n            passwordSelector,\n            password2Selector,\n            this.passwordRequirements,\n            errorTextMessages,\n        );\n    }\n\n    registerCreateAccountValidator($createAccountForm) {\n        const validationModel = validation($createAccountForm, this.context);\n        const createAccountValidator = nod({\n            submit: `${this.formCreateSelector} input[type='submit']`,\n            tap: announceInputErrorMessage,\n        });\n        const $stateElement = $('[data-field-type=\"State\"]');\n        const emailSelector = `${this.formCreateSelector} [data-field-type='EmailAddress']`;\n        const $emailElement = $(emailSelector);\n        const passwordSelector = `${this.formCreateSelector} [data-field-type='Password']`;\n        const $passwordElement = $(passwordSelector);\n        const password2Selector = `${this.formCreateSelector} [data-field-type='ConfirmPassword']`;\n        const $password2Element = $(password2Selector);\n\n        createAccountValidator.add(validationModel);\n\n        if ($stateElement) {\n            let $last;\n\n            // Requests the states for a country with AJAX\n            stateCountry($stateElement, this.context, (err, field) => {\n                if (err) {\n                    throw new Error(err);\n                }\n\n                const $field = $(field);\n\n                if (createAccountValidator.getStatus($stateElement) !== 'undefined') {\n                    createAccountValidator.remove($stateElement);\n                }\n\n                if ($last) {\n                    createAccountValidator.remove($last);\n                }\n\n                if ($field.is('select')) {\n                    $last = field;\n                    Validators.setStateCountryValidation(createAccountValidator, field, this.validationDictionary.field_not_blank);\n                } else {\n                    Validators.cleanUpStateValidation(field);\n                }\n            });\n        }\n\n        if ($emailElement) {\n            createAccountValidator.remove(emailSelector);\n            Validators.setEmailValidation(createAccountValidator, emailSelector, this.validationDictionary.valid_email);\n        }\n\n        if ($passwordElement && $password2Element) {\n            const { password: enterPassword, password_match: matchPassword, invalid_password: invalidPassword } = this.validationDictionary;\n\n            createAccountValidator.remove(passwordSelector);\n            createAccountValidator.remove(password2Selector);\n            Validators.setPasswordValidation(\n                createAccountValidator,\n                passwordSelector,\n                password2Selector,\n                this.passwordRequirements,\n                createPasswordValidationErrorTextObject(enterPassword, enterPassword, matchPassword, invalidPassword),\n            );\n        }\n\n        $createAccountForm.on('submit', event => {\n            createAccountValidator.performCheck();\n\n            if (createAccountValidator.areAll('valid')) {\n                return;\n            }\n\n            event.preventDefault();\n        });\n    }\n\n    /**\n     * Request is made in this function to the remote endpoint and pulls back the states for country.\n     */\n    onReady() {\n        if (!this.recaptcha.attr('title')) {\n            this.recaptcha.attr('title', this.context.recaptchaTitle);\n        }\n\n        const $createAccountForm = classifyForm(this.formCreateSelector);\n        const $loginForm = classifyForm('.login-form');\n        const $forgotPasswordForm = classifyForm('.forgot-password-form');\n        const $newPasswordForm = classifyForm('.new-password-form'); // reset password\n\n        // Injected via auth.html\n        this.passwordRequirements = this.context.passwordRequirements;\n\n        if ($loginForm.length) {\n            this.registerLoginValidation($loginForm);\n        }\n\n        if ($newPasswordForm.length) {\n            this.registerNewPasswordValidation();\n        }\n\n        if ($forgotPasswordForm.length) {\n            this.registerForgotPasswordValidation($forgotPasswordForm);\n        }\n\n        if ($createAccountForm.length) {\n            this.registerCreateAccountValidator($createAccountForm);\n        }\n    }\n}\n","const TRANSLATIONS = 'translations';\nconst isTranslationDictionaryNotEmpty = (dictionary) => !!Object.keys(dictionary[TRANSLATIONS]).length;\nconst chooseActiveDictionary = (...dictionaryJsonList) => {\n    for (let i = 0; i < dictionaryJsonList.length; i++) {\n        const dictionary = JSON.parse(dictionaryJsonList[i]);\n        if (isTranslationDictionaryNotEmpty(dictionary)) {\n            return dictionary;\n        }\n    }\n};\n\n/**\n * defines Translation Dictionary to use\n * @param context provides access to 3 validation JSONs from en.json:\n * validation_messages, validation_fallback_messages and default_messages\n * @returns {Object}\n */\nexport const createTranslationDictionary = (context) => {\n    const { validationDictionaryJSON, validationFallbackDictionaryJSON, validationDefaultDictionaryJSON } = context;\n    const activeDictionary = chooseActiveDictionary(validationDictionaryJSON, validationFallbackDictionaryJSON, validationDefaultDictionaryJSON);\n    const localizations = Object.values(activeDictionary[TRANSLATIONS]);\n    const translationKeys = Object.keys(activeDictionary[TRANSLATIONS]).map(key => key.split('.').pop());\n\n    return translationKeys.reduce((acc, key, i) => {\n        acc[key] = localizations[i];\n        return acc;\n    }, {});\n};\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","var isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n","import utils from '@bigcommerce/stencil-utils';\nimport _ from 'lodash';\nimport { insertStateHiddenField } from './utils/form-utils';\nimport { showAlertModal } from '../global/modal';\n\n/**\n * If there are no options from bcapp, a text field will be sent. This will create a select element to hold options after the remote request.\n * @returns {jQuery|HTMLElement}\n */\nfunction makeStateRequired(stateElement, context) {\n    const attrs = _.transform(stateElement.prop('attributes'), (result, item) => {\n        const ret = result;\n        ret[item.name] = item.value;\n        return ret;\n    });\n\n    const replacementAttributes = {\n        id: attrs.id,\n        'data-label': attrs['data-label'],\n        class: 'form-select',\n        name: attrs.name,\n        'data-field-type': attrs['data-field-type'],\n    };\n\n    stateElement.replaceWith($('<select></select>', replacementAttributes));\n\n    const $newElement = $('[data-field-type=\"State\"]');\n    const $hiddenInput = $('[name*=\"FormFieldIsText\"]');\n\n    if ($hiddenInput.length !== 0) {\n        $hiddenInput.remove();\n    }\n\n    if ($newElement.prev().find('small').length === 0) {\n        // String is injected from localizer\n        $newElement.prev().append(`<small>${context.required}</small>`);\n    } else {\n        $newElement.prev().find('small').show();\n    }\n\n    return $newElement;\n}\n\n/**\n * If a country with states is the default, a select will be sent,\n * In this case we need to be able to switch to an input field and hide the required field\n */\nfunction makeStateOptional(stateElement) {\n    const attrs = _.transform(stateElement.prop('attributes'), (result, item) => {\n        const ret = result;\n        ret[item.name] = item.value;\n\n        return ret;\n    });\n\n    const replacementAttributes = {\n        type: 'text',\n        id: attrs.id,\n        'data-label': attrs['data-label'],\n        class: 'form-input',\n        name: attrs.name,\n        'data-field-type': attrs['data-field-type'],\n    };\n\n    stateElement.replaceWith($('<input />', replacementAttributes));\n\n    const $newElement = $('[data-field-type=\"State\"]');\n\n    if ($newElement.length !== 0) {\n        insertStateHiddenField($newElement);\n        $newElement.prev().find('small').hide();\n    }\n\n    return $newElement;\n}\n\n/**\n * Adds the array of options from the remote request to the newly created select box.\n * @param {Object} statesArray\n * @param {jQuery} $selectElement\n * @param {Object} options\n */\nfunction addOptions(statesArray, $selectElement, options) {\n    const container = [];\n\n    container.push(`<option value=\"\">${statesArray.prefix}</option>`);\n\n    if (!_.isEmpty($selectElement)) {\n        _.each(statesArray.states, (stateObj) => {\n            if (options.useIdForStates) {\n                container.push(`<option value=\"${stateObj.id}\">${stateObj.name}</option>`);\n            } else {\n                container.push(`<option value=\"${stateObj.name}\">${stateObj.name}</option>`);\n            }\n        });\n\n        $selectElement.html(container.join(' '));\n    }\n}\n\n/**\n *\n * @param {jQuery} stateElement\n * @param {Object} context\n * @param {Object} options\n * @param {Function} callback\n */\nexport default function (stateElement, context = {}, options, callback) {\n    /**\n     * Backwards compatible for three parameters instead of four\n     *\n     * Available options:\n     *\n     * useIdForStates {Bool} - Generates states dropdown using id for values instead of strings\n     */\n    if (typeof options === 'function') {\n        /* eslint-disable no-param-reassign */\n        callback = options;\n        options = {};\n        /* eslint-enable no-param-reassign */\n    }\n\n    $('select[data-field-type=\"Country\"]').on('change', event => {\n        const countryName = $(event.currentTarget).val();\n\n        if (countryName === '') {\n            return;\n        }\n\n        utils.api.country.getByName(countryName, (err, response) => {\n            if (err) {\n                showAlertModal(context.state_error);\n                return callback(err);\n            }\n\n            const $currentInput = $('[data-field-type=\"State\"]');\n\n            if (!_.isEmpty(response.data.states)) {\n                // The element may have been replaced with a select, reselect it\n                const $selectElement = makeStateRequired($currentInput, context);\n\n                addOptions(response.data, $selectElement, options);\n                callback(null, $selectElement);\n            } else {\n                const newElement = makeStateOptional($currentInput, context);\n\n                callback(null, newElement);\n            }\n        });\n    });\n}\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var arrayEach = require('./_arrayEach'),\n    baseCreate = require('./_baseCreate'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee'),\n    getPrototype = require('./_getPrototype'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isTypedArray = require('./isTypedArray');\n\n/**\n * An alternative to `_.reduce`; this method transforms `object` to a new\n * `accumulator` object which is the result of running each of its own\n * enumerable string keyed properties thru `iteratee`, with each invocation\n * potentially mutating the `accumulator` object. If `accumulator` is not\n * provided, a new object with the same `[[Prototype]]` will be used. The\n * iteratee is invoked with four arguments: (accumulator, value, key, object).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 1.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The custom accumulator value.\n * @returns {*} Returns the accumulated value.\n * @example\n *\n * _.transform([2, 3, 4], function(result, n) {\n *   result.push(n *= n);\n *   return n % 2 == 0;\n * }, []);\n * // => [4, 9]\n *\n * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] }\n */\nfunction transform(object, iteratee, accumulator) {\n  var isArr = isArray(object),\n      isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n  iteratee = baseIteratee(iteratee, 4);\n  if (accumulator == null) {\n    var Ctor = object && object.constructor;\n    if (isArrLike) {\n      accumulator = isArr ? new Ctor : [];\n    }\n    else if (isObject(object)) {\n      accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n    }\n    else {\n      accumulator = {};\n    }\n  }\n  (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n    return iteratee(accumulator, value, index, object);\n  });\n  return accumulator;\n}\n\nmodule.exports = transform;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","import { createTranslationDictionary } from './utils/translations-utils';\n\n/**\n * Validate that the given date for the day/month/year select inputs is within potential range\n * @param $formField\n * @param validation\n * @returns {{selector: string, triggeredBy: string, validate: Function, errorMessage: string}}\n */\nfunction buildDateValidation($formField, validation) {\n    // No date range restriction, skip\n    if (validation.min_date && validation.max_date) {\n        const invalidMessage = `Your chosen date must fall between ${validation.min_date} and ${validation.max_date}.`;\n        const formElementId = $formField.attr('id');\n        const minSplit = validation.min_date.split('-');\n        const maxSplit = validation.max_date.split('-');\n        const minDate = new Date(minSplit[0], minSplit[1] - 1, minSplit[2]);\n        const maxDate = new Date(maxSplit[0], maxSplit[1] - 1, maxSplit[2]);\n\n        return {\n            selector: `#${formElementId} select[data-label=\"year\"]`,\n            triggeredBy: `#${formElementId} select:not([data-label=\"year\"])`,\n            validate: (cb, val) => {\n                const day = Number($formField.find('select[data-label=\"day\"]').val());\n                const month = Number($formField.find('select[data-label=\"month\"]').val()) - 1;\n                const year = Number(val);\n                const chosenDate = new Date(year, month, day);\n\n                cb(chosenDate >= minDate && chosenDate <= maxDate);\n            },\n            errorMessage: invalidMessage,\n        };\n    }\n}\n\n/**\n * We validate checkboxes separately from single input fields, as they must have at least one checked option\n * from many different inputs\n * @param $formField\n * @param validation\n * @param errorText provides error validation message\n */\nfunction buildRequiredCheckboxValidation(validation, $formField, errorText) {\n    const formFieldId = $formField.attr('id');\n    const primarySelector = `#${formFieldId} input:first-of-type`;\n    const secondarySelector = `#${formFieldId} input`;\n\n    return {\n        selector: primarySelector,\n        triggeredBy: secondarySelector,\n        validate: (cb) => {\n            let result = false;\n\n            $(secondarySelector).each((index, checkbox) => {\n                if (checkbox.checked) {\n                    result = true;\n\n                    return false;\n                }\n            });\n\n            cb(result);\n        },\n        errorMessage: errorText,\n    };\n}\n\nfunction buildRequiredValidation(validation, selector, errorText) {\n    return {\n        selector,\n        validate(cb, val) {\n            cb(val.length > 0);\n        },\n        errorMessage: errorText,\n    };\n}\n\nfunction buildNumberRangeValidation(validation, formFieldSelector) {\n    const invalidMessage = `The value for ${validation.label} must be between ${validation.min} and ${validation.max}.`;\n    const min = Number(validation.min);\n    const max = Number(validation.max);\n\n    return {\n        selector: `${formFieldSelector} input[name=\"${validation.name}\"]`,\n        validate: (cb, val) => {\n            const numberVal = Number(val);\n\n            cb(numberVal >= min && numberVal <= max);\n        },\n        errorMessage: invalidMessage,\n    };\n}\n\n\nfunction buildValidation($validateableElement, errorMessage) {\n    const validation = $validateableElement.data('validation');\n    const fieldValidations = [];\n    const formFieldSelector = `#${$validateableElement.attr('id')}`;\n\n    if (validation.type === 'datechooser') {\n        const dateValidation = buildDateValidation($validateableElement, validation);\n\n        if (dateValidation) {\n            fieldValidations.push(dateValidation);\n        }\n    } else if (validation.required && (validation.type === 'checkboxselect' || validation.type === 'radioselect')) {\n        fieldValidations.push(buildRequiredCheckboxValidation(validation, $validateableElement, errorMessage));\n    } else {\n        $validateableElement.find('input, select, textarea').each((index, element) => {\n            const $inputElement = $(element);\n            const tagName = $inputElement.get(0).tagName;\n            const inputName = $inputElement.attr('name');\n            const elementSelector = `${formFieldSelector} ${tagName}[name=\"${inputName}\"]`;\n\n            if (validation.type === 'numberonly') {\n                fieldValidations.push(buildNumberRangeValidation(validation, formFieldSelector));\n            }\n            if (validation.required) {\n                fieldValidations.push(buildRequiredValidation(validation, elementSelector, errorMessage));\n            }\n        });\n    }\n\n    return fieldValidations;\n}\n\n/**\n * Builds the validation model for dynamic forms\n * @param $form\n * @param context provides access for error messages on required fields validation\n * @returns {Array}\n */\nexport default function ($form, context) {\n    let validationsToPerform = [];\n    const { field_not_blank: requiredFieldValidationText } = createTranslationDictionary(context);\n\n    $form.find('[data-validation]').each((index, input) => {\n        const getLabel = $el => $el.first().data('validation').label;\n        const requiredValidationMessage = getLabel($(input)) + requiredFieldValidationText;\n\n        validationsToPerform = validationsToPerform.concat(buildValidation($(input), requiredValidationMessage));\n    });\n\n    return validationsToPerform;\n}\n"],"sourceRoot":""}