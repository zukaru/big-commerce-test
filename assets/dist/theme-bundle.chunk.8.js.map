{"version":3,"sources":["webpack:///./assets/js/theme/cart.js","webpack:///./node_modules/lodash/_baseIteratee.js","webpack:///./node_modules/lodash/keys.js","webpack:///./node_modules/lodash/_baseCreate.js","webpack:///./assets/js/theme/common/state-country.js","webpack:///./node_modules/lodash/each.js","webpack:///./node_modules/lodash/transform.js","webpack:///./node_modules/lodash/_arrayEach.js","webpack:///./node_modules/lodash/_baseForOwn.js","webpack:///./node_modules/lodash/_baseFor.js","webpack:///./node_modules/lodash/_createBaseFor.js","webpack:///./assets/js/theme/common/gift-certificate-validator.js","webpack:///./node_modules/lodash/bind.js","webpack:///./node_modules/lodash/_createWrap.js","webpack:///./node_modules/lodash/_createCtor.js","webpack:///./node_modules/lodash/_getHolder.js","webpack:///./node_modules/lodash/_replaceHolders.js","webpack:///./assets/js/theme/cart/shipping-estimator.js","webpack:///./assets/js/theme/common/cart-item-details.js"],"names":["Cart","onReady","this","$modal","$cartContent","$","$cartMessages","$cartTotals","$overlay","hide","$activeCartItemId","$activeCartItemBtnAction","bindEvents","cartUpdate","$target","itemId","data","$el","oldQty","parseInt","val","maxQty","minQty","minError","maxError","newQty","swal","fire","text","icon","show","utils","api","cart","itemUpdate","err","response","status","remove","refreshContent","errors","join","cartUpdateQtyTextChange","preVal","invalidEntry","Number","cartRemoveItem","itemRemove","cartEditOptions","productId","context","productForChangeId","modal","defaultModal","open","find","addClass","productAttributes","configureInCart","template","updateContent","content","$productOptionsContainer","modalBodyReservedHeight","outerHeight","css","productDetails","CartItemDetails","bindGiftWrappingForm","setupFocusableElements","modalTypes","CART_CHANGE_PRODUCT","hooks","on","event","currentTarget","$form","$submit","$messageBox","optionChange","serialize","result","purchasing_message","prop","purchasable","instock","$cartItemsRows","$cartPageTitle","length","window","location","reload","getContent","totals","pageTitle","statusMessages","html","replaceWith","quantity","trigger","filter","bindCartEvents","preventDefault","value","change","string","showCancelButton","then","bindPromoCodeEvents","$couponContainer","$couponForm","$codeInput","code","applyCode","bindGiftCertificateEvents","$certContainer","$certForm","$certInput","toggle","giftCertCheck","applyGiftCertificate","resp","bindGiftWrappingEvents","getItemGiftWrappingOptions","toggleViews","$singleForm","$multiForm","$select","id","index","allowMessage","shippingEstimator","ShippingEstimator","PageManager","module","exports","nativeKeys","overArg","Object","keys","isObject","objectCreate","create","baseCreate","object","proto","prototype","undefined","stateElement","options","callback","countryName","country","getByName","showAlertModal","state_error","$currentInput","states","newElement","attrs","item","ret","name","replacementAttributes","type","class","$newElement","insertStateHiddenField","prev","makeStateOptional","$selectElement","$hiddenInput","append","required","makeStateRequired","statesArray","container","push","prefix","stateObj","useIdForStates","addOptions","array","iteratee","arrayEach","baseForOwn","baseIteratee","getPrototype","isArray","isBuffer","isFunction","isTypedArray","accumulator","isArr","isArrLike","Ctor","constructor","baseFor","createBaseFor","fromRight","keysFunc","iterable","props","key","cert","baseRest","createWrap","getHolder","replaceHolders","bind","func","thisArg","partials","bitmask","holders","placeholder","apply","createCtor","root","isBind","wrapper","argsIndex","argsLength","arguments","leftIndex","leftLength","args","Array","fn","thisBinding","$element","$state","isEstimatorFormOpened","initFormValidation","bindStateCountryChange","bindEstimatorEvents","shippingEstimatorAlert","shippingValidator","nod","submit","tap","announceInputErrorMessage","attr","removeAttr","performCheck","areAll","bindValidation","bindStateValidation","bindUPSRates","add","selector","validate","cb","countryId","isNaN","errorMessage","$ele","eleVal","$estimatorFormUps","$estimatorFormDefault","toggleClass","$last","stateCountry","field","Error","$field","getStatus","is","Validators","cleanUpStateValidation","removeClass","toggleEstimatorFormState","toggleButton","buttonSelector","$toggleContainer","changeAttributesOnToggle","selectorToActivate","$estimatorContainer","$estimatorForm","collapsibleFactory","params","country_id","state_id","city","zip_code","getShippingQuotes","clickEvent","quoteId","submitShippingQuote","$scope","productAttributesData","$productOptionsElement","hasOptions","trim","hasDefaultOptions","setProductVariant","optionChangeCallback","optionChangeDecorator","call","updateProductAttributes","unsatisfiedRequiredFields","each","optionLabel","children","innerText","optionTitle","split","toLowerCase","includes","getAttribute","querySelector","from","querySelectorAll","every","select","selectedIndex","dateString","map","x","checked","getSelectedOptionLabel","convertIntoArray","inpt","dataset","productAttributeValue","label","isBrowserIE","labels","title","productVariant","sort","view","productName","match","ProductDetailsBase"],"mappings":"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","file":"theme-bundle.chunk.8.js","sourcesContent":["import PageManager from './page-manager';\nimport { bind, debounce } from 'lodash';\nimport giftCertCheck from './common/gift-certificate-validator';\nimport utils from '@bigcommerce/stencil-utils';\nimport ShippingEstimator from './cart/shipping-estimator';\nimport { defaultModal, modalTypes } from './global/modal';\nimport swal from './global/sweet-alert';\nimport CartItemDetails from './common/cart-item-details';\n\nexport default class Cart extends PageManager {\n    onReady() {\n        this.$modal = null;\n        this.$cartContent = $('[data-cart-content]');\n        this.$cartMessages = $('[data-cart-status]');\n        this.$cartTotals = $('[data-cart-totals]');\n        this.$overlay = $('[data-cart] .loadingOverlay')\n            .hide(); // TODO: temporary until roper pulls in his cart components\n        this.$activeCartItemId = null;\n        this.$activeCartItemBtnAction = null;\n\n        this.bindEvents();\n    }\n\n    cartUpdate($target) {\n        const itemId = $target.data('cartItemid');\n        this.$activeCartItemId = itemId;\n        this.$activeCartItemBtnAction = $target.data('action');\n\n        const $el = $(`#qty-${itemId}`);\n        const oldQty = parseInt($el.val(), 10);\n        const maxQty = parseInt($el.data('quantityMax'), 10);\n        const minQty = parseInt($el.data('quantityMin'), 10);\n        const minError = $el.data('quantityMinError');\n        const maxError = $el.data('quantityMaxError');\n        const newQty = $target.data('action') === 'inc' ? oldQty + 1 : oldQty - 1;\n        // Does not quality for min/max quantity\n        if (newQty < minQty) {\n            return swal.fire({\n                text: minError,\n                icon: 'error',\n            });\n        } else if (maxQty > 0 && newQty > maxQty) {\n            return swal.fire({\n                text: maxError,\n                icon: 'error',\n            });\n        }\n\n        this.$overlay.show();\n\n        utils.api.cart.itemUpdate(itemId, newQty, (err, response) => {\n            this.$overlay.hide();\n\n            if (response.data.status === 'succeed') {\n                // if the quantity is changed \"1\" from \"0\", we have to remove the row.\n                const remove = (newQty === 0);\n\n                this.refreshContent(remove);\n            } else {\n                $el.val(oldQty);\n                swal.fire({\n                    text: response.data.errors.join('\\n'),\n                    icon: 'error',\n                });\n            }\n        });\n    }\n\n    cartUpdateQtyTextChange($target, preVal = null) {\n        const itemId = $target.data('cartItemid');\n        const $el = $(`#qty-${itemId}`);\n        const maxQty = parseInt($el.data('quantityMax'), 10);\n        const minQty = parseInt($el.data('quantityMin'), 10);\n        const oldQty = preVal !== null ? preVal : minQty;\n        const minError = $el.data('quantityMinError');\n        const maxError = $el.data('quantityMaxError');\n        const newQty = parseInt(Number($el.val()), 10);\n        let invalidEntry;\n\n        // Does not quality for min/max quantity\n        if (!newQty) {\n            invalidEntry = $el.val();\n            $el.val(oldQty);\n            return swal.fire({\n                text: `${invalidEntry} is not a valid entry`,\n                icon: 'error',\n            });\n        } else if (newQty < minQty) {\n            $el.val(oldQty);\n            return swal.fire({\n                text: minError,\n                icon: 'error',\n            });\n        } else if (maxQty > 0 && newQty > maxQty) {\n            $el.val(oldQty);\n            return swal.fire({\n                text: maxError,\n                icon: 'error',\n            });\n        }\n\n        this.$overlay.show();\n        utils.api.cart.itemUpdate(itemId, newQty, (err, response) => {\n            this.$overlay.hide();\n\n            if (response.data.status === 'succeed') {\n                // if the quantity is changed \"1\" from \"0\", we have to remove the row.\n                const remove = (newQty === 0);\n\n                this.refreshContent(remove);\n            } else {\n                $el.val(oldQty);\n                swal.fire({\n                    text: response.data.errors.join('\\n'),\n                    icon: 'error',\n                });\n            }\n        });\n    }\n\n    cartRemoveItem(itemId) {\n        this.$overlay.show();\n        utils.api.cart.itemRemove(itemId, (err, response) => {\n            if (response.data.status === 'succeed') {\n                this.refreshContent(true);\n            } else {\n                swal.fire({\n                    text: response.data.errors.join('\\n'),\n                    icon: 'error',\n                });\n            }\n        });\n    }\n\n    cartEditOptions(itemId, productId) {\n        const context = { productForChangeId: productId, ...this.context };\n        const modal = defaultModal();\n\n        if (this.$modal === null) {\n            this.$modal = $('#modal');\n        }\n\n        const options = {\n            template: 'cart/modals/configure-product',\n        };\n\n        modal.open();\n        this.$modal.find('.modal-content').addClass('hide-content');\n\n        utils.api.productAttributes.configureInCart(itemId, options, (err, response) => {\n            modal.updateContent(response.content);\n            const $productOptionsContainer = $('[data-product-attributes-wrapper]', this.$modal);\n            const modalBodyReservedHeight = $productOptionsContainer.outerHeight();\n            $productOptionsContainer.css('height', modalBodyReservedHeight);\n\n            this.productDetails = new CartItemDetails(this.$modal, context);\n\n            this.bindGiftWrappingForm();\n\n            modal.setupFocusableElements(modalTypes.CART_CHANGE_PRODUCT);\n        });\n\n        utils.hooks.on('product-option-change', (event, currentTarget) => {\n            const $form = $(currentTarget).find('form');\n            const $submit = $('input.button', $form);\n            const $messageBox = $('.alertMessageBox');\n\n            utils.api.productAttributes.optionChange(productId, $form.serialize(), (err, result) => {\n                const data = result.data || {};\n\n                if (err) {\n                    swal.fire({\n                        text: err,\n                        icon: 'error',\n                    });\n                    return false;\n                }\n\n                if (data.purchasing_message) {\n                    $('p.alertBox-message', $messageBox).text(data.purchasing_message);\n                    $submit.prop('disabled', true);\n                    $messageBox.show();\n                } else {\n                    $submit.prop('disabled', false);\n                    $messageBox.hide();\n                }\n\n                if (!data.purchasable || !data.instock) {\n                    $submit.prop('disabled', true);\n                } else {\n                    $submit.prop('disabled', false);\n                }\n            });\n        });\n    }\n\n    refreshContent(remove) {\n        const $cartItemsRows = $('[data-item-row]', this.$cartContent);\n        const $cartPageTitle = $('[data-cart-page-title]');\n        const options = {\n            template: {\n                content: 'cart/content',\n                totals: 'cart/totals',\n                pageTitle: 'cart/page-title',\n                statusMessages: 'cart/status-messages',\n            },\n        };\n\n        this.$overlay.show();\n\n        // Remove last item from cart? Reload\n        if (remove && $cartItemsRows.length === 1) {\n            return window.location.reload();\n        }\n\n        utils.api.cart.getContent(options, (err, response) => {\n            this.$cartContent.html(response.content);\n            this.$cartTotals.html(response.totals);\n            this.$cartMessages.html(response.statusMessages);\n\n            $cartPageTitle.replaceWith(response.pageTitle);\n            this.bindEvents();\n            this.$overlay.hide();\n\n            const quantity = $('[data-cart-quantity]', this.$cartContent).data('cartQuantity') || 0;\n\n            $('body').trigger('cart-quantity-update', quantity);\n\n            $(`[data-cart-itemid='${this.$activeCartItemId}']`, this.$cartContent)\n                .filter(`[data-action='${this.$activeCartItemBtnAction}']`)\n                .trigger('focus');\n        });\n    }\n\n    bindCartEvents() {\n        const debounceTimeout = 400;\n        const cartUpdate = bind(debounce(this.cartUpdate, debounceTimeout), this);\n        const cartUpdateQtyTextChange = bind(debounce(this.cartUpdateQtyTextChange, debounceTimeout), this);\n        const cartRemoveItem = bind(debounce(this.cartRemoveItem, debounceTimeout), this);\n        let preVal;\n\n        // cart update\n        $('[data-cart-update]', this.$cartContent).on('click', event => {\n            const $target = $(event.currentTarget);\n\n            event.preventDefault();\n\n            // update cart quantity\n            cartUpdate($target);\n        });\n\n        // cart qty manually updates\n        $('.cart-item-qty-input', this.$cartContent).on('focus', function onQtyFocus() {\n            preVal = this.value;\n        }).change(event => {\n            const $target = $(event.currentTarget);\n            event.preventDefault();\n\n            // update cart quantity\n            cartUpdateQtyTextChange($target, preVal);\n        });\n\n        $('.cart-remove', this.$cartContent).on('click', event => {\n            const itemId = $(event.currentTarget).data('cartItemid');\n            const string = $(event.currentTarget).data('confirmDelete');\n            swal.fire({\n                text: string,\n                icon: 'warning',\n                showCancelButton: true,\n            }).then((result) => {\n                if (result.value) {\n                    // remove item from cart\n                    cartRemoveItem(itemId);\n                }\n            });\n            event.preventDefault();\n        });\n\n        $('[data-item-edit]', this.$cartContent).on('click', event => {\n            const itemId = $(event.currentTarget).data('itemEdit');\n            const productId = $(event.currentTarget).data('productId');\n            event.preventDefault();\n            // edit item in cart\n            this.cartEditOptions(itemId, productId);\n        });\n    }\n\n    bindPromoCodeEvents() {\n        const $couponContainer = $('.coupon-code');\n        const $couponForm = $('.coupon-form');\n        const $codeInput = $('[name=\"couponcode\"]', $couponForm);\n\n        $('.coupon-code-add').on('click', event => {\n            event.preventDefault();\n\n            $(event.currentTarget).hide();\n            $couponContainer.show();\n            $('.coupon-code-cancel').show();\n            $codeInput.trigger('focus');\n        });\n\n        $('.coupon-code-cancel').on('click', event => {\n            event.preventDefault();\n\n            $couponContainer.hide();\n            $('.coupon-code-cancel').hide();\n            $('.coupon-code-add').show();\n        });\n\n        $couponForm.on('submit', event => {\n            const code = $codeInput.val();\n\n            event.preventDefault();\n\n            // Empty code\n            if (!code) {\n                return swal.fire({\n                    text: $codeInput.data('error'),\n                    icon: 'error',\n                });\n            }\n\n            utils.api.cart.applyCode(code, (err, response) => {\n                if (response.data.status === 'success') {\n                    this.refreshContent();\n                } else {\n                    swal.fire({\n                        html: response.data.errors.join('\\n'),\n                        icon: 'error',\n                    });\n                }\n            });\n        });\n    }\n\n    bindGiftCertificateEvents() {\n        const $certContainer = $('.gift-certificate-code');\n        const $certForm = $('.cart-gift-certificate-form');\n        const $certInput = $('[name=\"certcode\"]', $certForm);\n\n        $('.gift-certificate-add').on('click', event => {\n            event.preventDefault();\n            $(event.currentTarget).toggle();\n            $certContainer.toggle();\n            $('.gift-certificate-cancel').toggle();\n        });\n\n        $('.gift-certificate-cancel').on('click', event => {\n            event.preventDefault();\n            $certContainer.toggle();\n            $('.gift-certificate-add').toggle();\n            $('.gift-certificate-cancel').toggle();\n        });\n\n        $certForm.on('submit', event => {\n            const code = $certInput.val();\n\n            event.preventDefault();\n\n            if (!giftCertCheck(code)) {\n                return swal.fire({\n                    text: $certInput.data('error'),\n                    icon: 'error',\n                });\n            }\n\n            utils.api.cart.applyGiftCertificate(code, (err, resp) => {\n                if (resp.data.status === 'success') {\n                    this.refreshContent();\n                } else {\n                    swal.fire({\n                        html: resp.data.errors.join('\\n'),\n                        icon: 'error',\n                    });\n                }\n            });\n        });\n    }\n\n    bindGiftWrappingEvents() {\n        const modal = defaultModal();\n\n        $('[data-item-giftwrap]').on('click', event => {\n            const itemId = $(event.currentTarget).data('itemGiftwrap');\n            const options = {\n                template: 'cart/modals/gift-wrapping-form',\n            };\n\n            event.preventDefault();\n\n            modal.open();\n\n            utils.api.cart.getItemGiftWrappingOptions(itemId, options, (err, response) => {\n                modal.updateContent(response.content);\n\n                this.bindGiftWrappingForm();\n            });\n        });\n    }\n\n    bindGiftWrappingForm() {\n        $('.giftWrapping-select').on('change', event => {\n            const $select = $(event.currentTarget);\n            const id = $select.val();\n            const index = $select.data('index');\n\n            if (!id) {\n                return;\n            }\n\n            const allowMessage = $select.find(`option[value=${id}]`).data('allowMessage');\n\n            $(`.giftWrapping-image-${index}`).hide();\n            $(`#giftWrapping-image-${index}-${id}`).show();\n\n            if (allowMessage) {\n                $(`#giftWrapping-message-${index}`).show();\n            } else {\n                $(`#giftWrapping-message-${index}`).hide();\n            }\n        });\n\n        $('.giftWrapping-select').trigger('change');\n\n        function toggleViews() {\n            const value = $('input:radio[name =\"giftwraptype\"]:checked').val();\n            const $singleForm = $('.giftWrapping-single');\n            const $multiForm = $('.giftWrapping-multiple');\n\n            if (value === 'same') {\n                $singleForm.show();\n                $multiForm.hide();\n            } else {\n                $singleForm.hide();\n                $multiForm.show();\n            }\n        }\n\n        $('[name=\"giftwraptype\"]').on('click', toggleViews);\n\n        toggleViews();\n    }\n\n    bindEvents() {\n        this.bindCartEvents();\n        this.bindPromoCodeEvents();\n        this.bindGiftWrappingEvents();\n        this.bindGiftCertificateEvents();\n\n        // initiate shipping estimator module\n        this.shippingEstimator = new ShippingEstimator($('[data-shipping-estimator]'));\n    }\n}\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","var isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n","import utils from '@bigcommerce/stencil-utils';\nimport _ from 'lodash';\nimport { insertStateHiddenField } from './utils/form-utils';\nimport { showAlertModal } from '../global/modal';\n\n/**\n * If there are no options from bcapp, a text field will be sent. This will create a select element to hold options after the remote request.\n * @returns {jQuery|HTMLElement}\n */\nfunction makeStateRequired(stateElement, context) {\n    const attrs = _.transform(stateElement.prop('attributes'), (result, item) => {\n        const ret = result;\n        ret[item.name] = item.value;\n        return ret;\n    });\n\n    const replacementAttributes = {\n        id: attrs.id,\n        'data-label': attrs['data-label'],\n        class: 'form-select',\n        name: attrs.name,\n        'data-field-type': attrs['data-field-type'],\n    };\n\n    stateElement.replaceWith($('<select></select>', replacementAttributes));\n\n    const $newElement = $('[data-field-type=\"State\"]');\n    const $hiddenInput = $('[name*=\"FormFieldIsText\"]');\n\n    if ($hiddenInput.length !== 0) {\n        $hiddenInput.remove();\n    }\n\n    if ($newElement.prev().find('small').length === 0) {\n        // String is injected from localizer\n        $newElement.prev().append(`<small>${context.required}</small>`);\n    } else {\n        $newElement.prev().find('small').show();\n    }\n\n    return $newElement;\n}\n\n/**\n * If a country with states is the default, a select will be sent,\n * In this case we need to be able to switch to an input field and hide the required field\n */\nfunction makeStateOptional(stateElement) {\n    const attrs = _.transform(stateElement.prop('attributes'), (result, item) => {\n        const ret = result;\n        ret[item.name] = item.value;\n\n        return ret;\n    });\n\n    const replacementAttributes = {\n        type: 'text',\n        id: attrs.id,\n        'data-label': attrs['data-label'],\n        class: 'form-input',\n        name: attrs.name,\n        'data-field-type': attrs['data-field-type'],\n    };\n\n    stateElement.replaceWith($('<input />', replacementAttributes));\n\n    const $newElement = $('[data-field-type=\"State\"]');\n\n    if ($newElement.length !== 0) {\n        insertStateHiddenField($newElement);\n        $newElement.prev().find('small').hide();\n    }\n\n    return $newElement;\n}\n\n/**\n * Adds the array of options from the remote request to the newly created select box.\n * @param {Object} statesArray\n * @param {jQuery} $selectElement\n * @param {Object} options\n */\nfunction addOptions(statesArray, $selectElement, options) {\n    const container = [];\n\n    container.push(`<option value=\"\">${statesArray.prefix}</option>`);\n\n    if (!_.isEmpty($selectElement)) {\n        _.each(statesArray.states, (stateObj) => {\n            if (options.useIdForStates) {\n                container.push(`<option value=\"${stateObj.id}\">${stateObj.name}</option>`);\n            } else {\n                container.push(`<option value=\"${stateObj.name}\">${stateObj.name}</option>`);\n            }\n        });\n\n        $selectElement.html(container.join(' '));\n    }\n}\n\n/**\n *\n * @param {jQuery} stateElement\n * @param {Object} context\n * @param {Object} options\n * @param {Function} callback\n */\nexport default function (stateElement, context = {}, options, callback) {\n    /**\n     * Backwards compatible for three parameters instead of four\n     *\n     * Available options:\n     *\n     * useIdForStates {Bool} - Generates states dropdown using id for values instead of strings\n     */\n    if (typeof options === 'function') {\n        /* eslint-disable no-param-reassign */\n        callback = options;\n        options = {};\n        /* eslint-enable no-param-reassign */\n    }\n\n    $('select[data-field-type=\"Country\"]').on('change', event => {\n        const countryName = $(event.currentTarget).val();\n\n        if (countryName === '') {\n            return;\n        }\n\n        utils.api.country.getByName(countryName, (err, response) => {\n            if (err) {\n                showAlertModal(context.state_error);\n                return callback(err);\n            }\n\n            const $currentInput = $('[data-field-type=\"State\"]');\n\n            if (!_.isEmpty(response.data.states)) {\n                // The element may have been replaced with a select, reselect it\n                const $selectElement = makeStateRequired($currentInput, context);\n\n                addOptions(response.data, $selectElement, options);\n                callback(null, $selectElement);\n            } else {\n                const newElement = makeStateOptional($currentInput, context);\n\n                callback(null, newElement);\n            }\n        });\n    });\n}\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var arrayEach = require('./_arrayEach'),\n    baseCreate = require('./_baseCreate'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee'),\n    getPrototype = require('./_getPrototype'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isTypedArray = require('./isTypedArray');\n\n/**\n * An alternative to `_.reduce`; this method transforms `object` to a new\n * `accumulator` object which is the result of running each of its own\n * enumerable string keyed properties thru `iteratee`, with each invocation\n * potentially mutating the `accumulator` object. If `accumulator` is not\n * provided, a new object with the same `[[Prototype]]` will be used. The\n * iteratee is invoked with four arguments: (accumulator, value, key, object).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 1.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The custom accumulator value.\n * @returns {*} Returns the accumulated value.\n * @example\n *\n * _.transform([2, 3, 4], function(result, n) {\n *   result.push(n *= n);\n *   return n % 2 == 0;\n * }, []);\n * // => [4, 9]\n *\n * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] }\n */\nfunction transform(object, iteratee, accumulator) {\n  var isArr = isArray(object),\n      isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n  iteratee = baseIteratee(iteratee, 4);\n  if (accumulator == null) {\n    var Ctor = object && object.constructor;\n    if (isArrLike) {\n      accumulator = isArr ? new Ctor : [];\n    }\n    else if (isObject(object)) {\n      accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n    }\n    else {\n      accumulator = {};\n    }\n  }\n  (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n    return iteratee(accumulator, value, index, object);\n  });\n  return accumulator;\n}\n\nmodule.exports = transform;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","export default function (cert) {\n    if (typeof cert !== 'string') {\n        return false;\n    }\n\n    // Add any custom gift certificate validation logic here\n    return true;\n}\n","var baseRest = require('./_baseRest'),\n    createWrap = require('./_createWrap'),\n    getHolder = require('./_getHolder'),\n    replaceHolders = require('./_replaceHolders');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_PARTIAL_FLAG = 32;\n\n/**\n * Creates a function that invokes `func` with the `this` binding of `thisArg`\n * and `partials` prepended to the arguments it receives.\n *\n * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n * may be used as a placeholder for partially applied arguments.\n *\n * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n * property of bound functions.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to bind.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {...*} [partials] The arguments to be partially applied.\n * @returns {Function} Returns the new bound function.\n * @example\n *\n * function greet(greeting, punctuation) {\n *   return greeting + ' ' + this.user + punctuation;\n * }\n *\n * var object = { 'user': 'fred' };\n *\n * var bound = _.bind(greet, object, 'hi');\n * bound('!');\n * // => 'hi fred!'\n *\n * // Bound with placeholders.\n * var bound = _.bind(greet, object, _, '!');\n * bound('hi');\n * // => 'hi fred!'\n */\nvar bind = baseRest(function(func, thisArg, partials) {\n  var bitmask = WRAP_BIND_FLAG;\n  if (partials.length) {\n    var holders = replaceHolders(partials, getHolder(bind));\n    bitmask |= WRAP_PARTIAL_FLAG;\n  }\n  return createWrap(func, bitmask, thisArg, partials, holders);\n});\n\n// Assign default placeholders.\nbind.placeholder = {};\n\nmodule.exports = bind;\n","var apply = require('./_apply'),\n    createCtor = require('./_createCtor'),\n    root = require('./_root');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1;\n\n/**\n * Creates a function that wraps `func` to invoke it with the `this` binding\n * of `thisArg` and `partials` prepended to the arguments it receives.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} partials The arguments to prepend to those provided to\n *  the new function.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createPartial(func, bitmask, thisArg, partials) {\n  var isBind = bitmask & WRAP_BIND_FLAG,\n      Ctor = createCtor(func);\n\n  function wrapper() {\n    var argsIndex = -1,\n        argsLength = arguments.length,\n        leftIndex = -1,\n        leftLength = partials.length,\n        args = Array(leftLength + argsLength),\n        fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n    while (++leftIndex < leftLength) {\n      args[leftIndex] = partials[leftIndex];\n    }\n    while (argsLength--) {\n      args[leftIndex++] = arguments[++argsIndex];\n    }\n    return apply(fn, isBind ? thisArg : this, args);\n  }\n  return wrapper;\n}\n\nmodule.exports = createPartial;\n","var baseCreate = require('./_baseCreate'),\n    isObject = require('./isObject');\n\n/**\n * Creates a function that produces an instance of `Ctor` regardless of\n * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n *\n * @private\n * @param {Function} Ctor The constructor to wrap.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createCtor(Ctor) {\n  return function() {\n    // Use a `switch` statement to work with class constructors. See\n    // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n    // for more details.\n    var args = arguments;\n    switch (args.length) {\n      case 0: return new Ctor;\n      case 1: return new Ctor(args[0]);\n      case 2: return new Ctor(args[0], args[1]);\n      case 3: return new Ctor(args[0], args[1], args[2]);\n      case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n      case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n      case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n      case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n    }\n    var thisBinding = baseCreate(Ctor.prototype),\n        result = Ctor.apply(thisBinding, args);\n\n    // Mimic the constructor's `return` behavior.\n    // See https://es5.github.io/#x13.2.2 for more details.\n    return isObject(result) ? result : thisBinding;\n  };\n}\n\nmodule.exports = createCtor;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n","import stateCountry from '../common/state-country';\nimport nod from '../common/nod';\nimport utils from '@bigcommerce/stencil-utils';\nimport { Validators, announceInputErrorMessage } from '../common/utils/form-utils';\nimport collapsibleFactory from '../common/collapsible';\nimport swal from '../global/sweet-alert';\n\nexport default class ShippingEstimator {\n    constructor($element) {\n        this.$element = $element;\n\n        this.$state = $('[data-field-type=\"State\"]', this.$element);\n        this.isEstimatorFormOpened = false;\n        this.initFormValidation();\n        this.bindStateCountryChange();\n        this.bindEstimatorEvents();\n    }\n\n    initFormValidation() {\n        const shippingEstimatorAlert = $('.shipping-quotes');\n\n        this.shippingEstimator = 'form[data-shipping-estimator]';\n        this.shippingValidator = nod({\n            submit: `${this.shippingEstimator} .shipping-estimate-submit`,\n            tap: announceInputErrorMessage,\n        });\n\n        $('.shipping-estimate-submit', this.$element).on('click', event => {\n            // estimator error messages are being injected in html as a result\n            // of user submit; clearing and adding role on submit provides\n            // regular announcement of these error messages\n            if (shippingEstimatorAlert.attr('role')) {\n                shippingEstimatorAlert.removeAttr('role');\n            }\n\n            shippingEstimatorAlert.attr('role', 'alert');\n            // When switching between countries, the state/region is dynamic\n            // Only perform a check for all fields when country has a value\n            // Otherwise areAll('valid') will check country for validity\n            if ($(`${this.shippingEstimator} select[name=\"shipping-country\"]`).val()) {\n                this.shippingValidator.performCheck();\n            }\n\n            if (this.shippingValidator.areAll('valid')) {\n                return;\n            }\n\n            event.preventDefault();\n        });\n\n        this.bindValidation();\n        this.bindStateValidation();\n        this.bindUPSRates();\n    }\n\n    bindValidation() {\n        this.shippingValidator.add([\n            {\n                selector: `${this.shippingEstimator} select[name=\"shipping-country\"]`,\n                validate: (cb, val) => {\n                    const countryId = Number(val);\n                    const result = countryId !== 0 && !Number.isNaN(countryId);\n\n                    cb(result);\n                },\n                errorMessage: 'The \\'Country\\' field cannot be blank.',\n            },\n        ]);\n    }\n\n    bindStateValidation() {\n        this.shippingValidator.add([\n            {\n                selector: $(`${this.shippingEstimator} select[name=\"shipping-state\"]`),\n                validate: (cb) => {\n                    let result;\n\n                    const $ele = $(`${this.shippingEstimator} select[name=\"shipping-state\"]`);\n\n                    if ($ele.length) {\n                        const eleVal = $ele.val();\n\n                        result = eleVal && eleVal.length && eleVal !== 'State/province';\n                    }\n\n                    cb(result);\n                },\n                errorMessage: 'The \\'State/Province\\' field cannot be blank.',\n            },\n        ]);\n    }\n\n    /**\n     * Toggle between default shipping and ups shipping rates\n     */\n    bindUPSRates() {\n        const UPSRateToggle = '.estimator-form-toggleUPSRate';\n\n        $('body').on('click', UPSRateToggle, (event) => {\n            const $estimatorFormUps = $('.estimator-form--ups');\n            const $estimatorFormDefault = $('.estimator-form--default');\n\n            event.preventDefault();\n\n            $estimatorFormUps.toggleClass('u-hiddenVisually');\n            $estimatorFormDefault.toggleClass('u-hiddenVisually');\n        });\n    }\n\n    bindStateCountryChange() {\n        let $last;\n\n        // Requests the states for a country with AJAX\n        stateCountry(this.$state, this.context, { useIdForStates: true }, (err, field) => {\n            if (err) {\n                swal.fire({\n                    text: err,\n                    icon: 'error',\n                });\n\n                throw new Error(err);\n            }\n\n            const $field = $(field);\n\n            if (this.shippingValidator.getStatus(this.$state) !== 'undefined') {\n                this.shippingValidator.remove(this.$state);\n            }\n\n            if ($last) {\n                this.shippingValidator.remove($last);\n            }\n\n            if ($field.is('select')) {\n                $last = field;\n                this.bindStateValidation();\n            } else {\n                $field.attr('placeholder', 'State/province');\n                Validators.cleanUpStateValidation(field);\n            }\n\n            // When you change a country, you swap the state/province between an input and a select dropdown\n            // Not all countries require the province to be filled\n            // We have to remove this class when we swap since nod validation doesn't cleanup for us\n            $(this.shippingEstimator).find('.form-field--success').removeClass('form-field--success');\n        });\n    }\n\n    toggleEstimatorFormState(toggleButton, buttonSelector, $toggleContainer) {\n        const changeAttributesOnToggle = (selectorToActivate) => {\n            $(toggleButton).attr('aria-labelledby', selectorToActivate);\n            $(buttonSelector).text($(`#${selectorToActivate}`).text());\n        };\n\n        if (!this.isEstimatorFormOpened) {\n            changeAttributesOnToggle('estimator-close');\n            $toggleContainer.removeClass('u-hidden');\n        } else {\n            changeAttributesOnToggle('estimator-add');\n            $toggleContainer.addClass('u-hidden');\n        }\n        this.isEstimatorFormOpened = !this.isEstimatorFormOpened;\n    }\n\n    bindEstimatorEvents() {\n        const $estimatorContainer = $('.shipping-estimator');\n        const $estimatorForm = $('.estimator-form');\n        collapsibleFactory();\n        $estimatorForm.on('submit', event => {\n            const params = {\n                country_id: $('[name=\"shipping-country\"]', $estimatorForm).val(),\n                state_id: $('[name=\"shipping-state\"]', $estimatorForm).val(),\n                city: $('[name=\"shipping-city\"]', $estimatorForm).val(),\n                zip_code: $('[name=\"shipping-zip\"]', $estimatorForm).val(),\n            };\n\n            event.preventDefault();\n\n            utils.api.cart.getShippingQuotes(params, 'cart/shipping-quotes', (err, response) => {\n                $('.shipping-quotes').html(response.content);\n\n                // bind the select button\n                $('.select-shipping-quote').on('click', clickEvent => {\n                    const quoteId = $('.shipping-quote:checked').val();\n\n                    clickEvent.preventDefault();\n\n                    utils.api.cart.submitShippingQuote(quoteId, () => {\n                        window.location.reload();\n                    });\n                });\n            });\n        });\n\n        $('.shipping-estimate-show').on('click', event => {\n            event.preventDefault();\n            this.toggleEstimatorFormState(event.currentTarget, '.shipping-estimate-show__btn-name', $estimatorContainer);\n        });\n    }\n}\n","import utils from '@bigcommerce/stencil-utils';\nimport ProductDetailsBase, { optionChangeDecorator } from './product-details-base';\nimport { isEmpty } from 'lodash';\nimport { isBrowserIE, convertIntoArray } from './utils/ie-helpers';\n\nexport default class CartItemDetails extends ProductDetailsBase {\n    constructor($scope, context, productAttributesData = {}) {\n        super($scope, context);\n\n        const $form = $('#CartEditProductFieldsForm', this.$scope);\n        const $productOptionsElement = $('[data-product-attributes-wrapper]', $form);\n        const hasOptions = $productOptionsElement.html().trim().length;\n        const hasDefaultOptions = $productOptionsElement.find('[data-default]').length;\n\n        $productOptionsElement.on('change', () => {\n            this.setProductVariant();\n        });\n\n        const optionChangeCallback = optionChangeDecorator.call(this, hasDefaultOptions);\n\n        // Update product attributes. Also update the initial view in case items are oos\n        // or have default variant properties that change the view\n        if ((isEmpty(productAttributesData) || hasDefaultOptions) && hasOptions) {\n            const productId = this.context.productForChangeId;\n\n            utils.api.productAttributes.optionChange(productId, $form.serialize(), 'products/bulk-discount-rates', optionChangeCallback);\n        } else {\n            this.updateProductAttributes(productAttributesData);\n        }\n    }\n\n    setProductVariant() {\n        const unsatisfiedRequiredFields = [];\n        const options = [];\n\n        $.each($('[data-product-attribute]'), (index, value) => {\n            const optionLabel = value.children[0].innerText;\n            const optionTitle = optionLabel.split(':')[0].trim();\n            const required = optionLabel.toLowerCase().includes('required');\n            const type = value.getAttribute('data-product-attribute');\n\n            if ((type === 'input-file' || type === 'input-text' || type === 'input-number') && value.querySelector('input').value === '' && required) {\n                unsatisfiedRequiredFields.push(value);\n            }\n\n            if (type === 'textarea' && value.querySelector('textarea').value === '' && required) {\n                unsatisfiedRequiredFields.push(value);\n            }\n\n            if (type === 'date') {\n                const isSatisfied = Array.from(value.querySelectorAll('select')).every((select) => select.selectedIndex !== 0);\n\n                if (isSatisfied) {\n                    const dateString = Array.from(value.querySelectorAll('select')).map((x) => x.value).join('-');\n                    options.push(`${optionTitle}:${dateString}`);\n\n                    return;\n                }\n\n                if (required) {\n                    unsatisfiedRequiredFields.push(value);\n                }\n            }\n\n            if (type === 'set-select') {\n                const select = value.querySelector('select');\n                const selectedIndex = select.selectedIndex;\n\n                if (selectedIndex !== 0) {\n                    options.push(`${optionTitle}:${select.options[selectedIndex].innerText}`);\n\n                    return;\n                }\n\n                if (required) {\n                    unsatisfiedRequiredFields.push(value);\n                }\n            }\n\n            if (type === 'set-rectangle' || type === 'set-radio' || type === 'swatch' || type === 'input-checkbox' || type === 'product-list') {\n                const checked = value.querySelector(':checked');\n                if (checked) {\n                    const getSelectedOptionLabel = () => {\n                        const productVariantslist = convertIntoArray(value.children);\n                        const matchLabelForCheckedInput = inpt => inpt.dataset.productAttributeValue === checked.value;\n                        return productVariantslist.filter(matchLabelForCheckedInput)[0];\n                    };\n                    if (type === 'set-rectangle' || type === 'set-radio' || type === 'product-list') {\n                        const label = isBrowserIE ? getSelectedOptionLabel().innerText.trim() : checked.labels[0].innerText;\n                        if (label) {\n                            options.push(`${optionTitle}:${label}`);\n                        }\n                    }\n\n                    if (type === 'swatch') {\n                        const label = isBrowserIE ? getSelectedOptionLabel().children[0] : checked.labels[0].children[0];\n                        if (label) {\n                            options.push(`${optionTitle}:${label.title}`);\n                        }\n                    }\n\n                    if (type === 'input-checkbox') {\n                        options.push(`${optionTitle}:Yes`);\n                    }\n\n                    return;\n                }\n\n                if (type === 'input-checkbox') {\n                    options.push(`${optionTitle}:No`);\n                }\n\n                if (required) {\n                    unsatisfiedRequiredFields.push(value);\n                }\n            }\n        });\n\n        let productVariant = unsatisfiedRequiredFields.length === 0 ? options.sort().join(', ') : 'unsatisfied';\n        const view = $('.modal-header-title');\n\n        if (productVariant) {\n            productVariant = productVariant === 'unsatisfied' ? '' : productVariant;\n            if (view.attr('data-event-type')) {\n                view.attr('data-product-variant', productVariant);\n            } else {\n                const productName = view.html().match(/'(.*?)'/)[1];\n                const card = $(`[data-name=\"${productName}\"]`);\n                card.attr('data-product-variant', productVariant);\n            }\n        }\n    }\n\n    /**\n     * Hide or mark as unavailable out of stock attributes if enabled\n     * @param  {Object} data Product attribute data\n     */\n    updateProductAttributes(data) {\n        super.updateProductAttributes(data);\n\n        this.$scope.find('.modal-content').removeClass('hide-content');\n    }\n}\n"],"sourceRoot":""}